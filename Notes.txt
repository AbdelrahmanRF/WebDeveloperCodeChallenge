Features Done:

1. Create an input form where users can enter the owner and the name of a Github repository. Upon pressing “search”, this feature should retrieve a list of issues of the given Github repository. Each of the issues should be displayed with its number, title, and creation date in tabular format for the user to browse.


2. Implement error handling and use an animation to indicate that data is being fetched from the server.

3. For each issue, display its author along with his username, profile picture, and a link to his GitHub page.

4. Provide a more finalized version of your application’s styling, giving it some additional flavor and making it fun to use. Make sure it looks good on the phones too.

Packages needed:

System.Reactive (6.0.0)
OctoKit.Reactive (7.1.0)

Loading Animation Source:
https://github.com/loadingio/css-spinner/

How the GitHub Repository Issues Search Application Works:

Initial Landing Page:

Users access the application's home page, where they are presented with a simple interface, navbar with website name and input form, along with instructions.

Input Form:

Users are prompted to enter two pieces of information: the owner's GitHub username and the name of the repository they want to search for issues in.

Search Submission:

After filling out the required fields, users click the "Search" button to initiate the search process.

Server Interaction:

The application sends a request to the GitHub API with the provided owner and repository name.
It fetches a list of issues associated with the specified repository.

Displaying Issues:

Once the API response is received and processed successfully, the application displays the list of issues in a tabular format.
Each issue is presented with its issue number, title, creation date, author's username, profile picture, and a link to the author's GitHub page.

Loading Animation:

While waiting for the API response, a loading animation is displayed to indicate that data is being fetched from the server.

Error Handling:

If the user went to result page without filling the form, or any problem happens while getting the result or issues the user will be redirected to error page indicating that error happend along with the error message.

Responsive Design:

The application is designed to be responsive, ensuring that it functions and looks visually appealing on various screen sizes, including mobile devices.


